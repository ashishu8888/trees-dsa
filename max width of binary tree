
#include<bits/stdc++.h>
#include<queue>
using namespace std;
int num ;

 struct node{
    int data;
   struct node *left;
    struct node *right;
}*newnode;

 node* createTree(){
     node* root = new node;
    root->left = NULL;
    root->right = NULL;
   cout<<"enter data\n";
   cin>>num;


    if(num == -1)
    return NULL;

    root->data = num;

    cout<<"enter data to the left of "<<root->data<<"\n";
    root->left = createTree();

    cout<<"enter data to the right of "<<root->data<<"\n";
    root->right = createTree();
}
int maxWidthOfBinaryTree(node* root){

    if(root == NULL)
    return 0;

    queue<node*> q;
    q.push(root);
    int res = -1;
    while(q.empty() == false){

        int count = q.size();
        res = max(res , count);

        for(int i=0;i<count;i++){
            node* curr = q.front();
            q.pop();

            if(curr->left != NULL)
            q.push(curr->left);

            if(curr->right != NULL)
            q.push(curr->right);
        }

    }

    return res;

}
int main(){
    node* root = createTree();
    int check =  maxWidthOfBinaryTree(root);
    
    cout<<check;
}
